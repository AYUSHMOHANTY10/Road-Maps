{
  "version": 3,
  "sources": ["../../src/scripts/topic-overlay.js", "../../src/scripts/topic.js"],
  "sourcesContent": ["export class TopicOverlay {\n  /**\n   * @param {{ overlayId: string, contentId: string, loaderId: string }} config\n   */\n  constructor(config) {\n    this.config = config;\n\n    this.close = this.close.bind(this);\n    this.loading = this.loading.bind(this);\n    this.populate = this.populate.bind(this);\n  }\n\n  get loaderEl() {\n    return document.getElementById(this.config.loaderId);\n  }\n\n  get contentEl() {\n    return document.getElementById(this.config.contentId);\n  }\n\n  get overlayEl() {\n    return document.getElementById(this.config.overlayId);\n  }\n\n  /**\n   * @returns {TopicOverlay}\n   */\n  loading() {\n    this.loaderEl.classList.remove('hidden'); // Show loader\n    this.contentEl.replaceChildren(''); // Remove content\n    this.overlayEl.classList.remove('hidden'); // Show Overlay\n\n    return this;\n  }\n\n  /**\n   * @returns {TopicOverlay}\n   */\n  close() {\n    this.overlayEl.classList.add('hidden'); // Hide Overlay\n    this.loaderEl.classList.remove('hidden'); // Show loader\n    this.contentEl.replaceChildren(''); // Remove content\n\n    return this;\n  }\n\n  /**\n   * @param {string | HTMLElement} html\n   * @returns {TopicOverlay}\n   */\n  populate(html) {\n    this.contentEl.replaceChildren(html);\n    this.loaderEl.classList.add('hidden');\n\n    return this;\n  }\n}\n", "/**\n * @typedef {{ roadmapId: string, topicLoaderId: string, topicContentId: string, topicOverlayId: string }} TopicConfig\n */\nimport { TopicOverlay } from './topic-overlay';\n\nexport class Topic {\n  /**\n   * @param {TopicConfig} config\n   */\n  constructor(config) {\n    this.config = config;\n\n    this.topicOverlay = new TopicOverlay({\n      contentId: this.config.topicContentId,\n      loaderId: this.config.topicLoaderId,\n      overlayId: this.config.topicOverlayId,\n    });\n\n    this.handleCloseTopic = this.handleCloseTopic.bind(this);\n    this.handleLoadTopic = this.handleLoadTopic.bind(this);\n    this.init = this.init.bind(this);\n  }\n\n  fetchTopicHtml(roadmapId, groupId) {\n    const topicPartial = groupId.replace(/^\\d+-/, '').replaceAll(/:/g, '/');\n    const fullUrl = `/${roadmapId}/${topicPartial}/`;\n\n    return fetch(fullUrl)\n      .then((res) => {\n        return res.text();\n      })\n      .then((topicHtml) => {\n        // It's full HTML with page body, head etc\n        // We only need the inner HTML of the #main-content\n        const node = new DOMParser().parseFromString(topicHtml, 'text/html');\n\n        return node.getElementById('main-content');\n      });\n  }\n\n  handleCloseTopic(e) {\n    // If clicked inside the content container\n    if (e.target.closest(this.config.topicContentId)) {\n      return;\n    }\n\n    e.stopPropagation();\n\n    this.topicOverlay.close();\n  }\n\n  handleLoadTopic(e) {\n    const targetGroup = e.target.closest('g') || {};\n    const groupId = targetGroup.dataset ? targetGroup.dataset.groupId : '';\n    if (!groupId) {\n      return;\n    }\n\n    e.stopPropagation();\n\n    if (/^ext_link/.test(groupId)) {\n      window.open(`https://${groupId.replace('ext_link:', '')}`);\n      return;\n    }\n\n    this.topicOverlay.loading();\n\n    this.fetchTopicHtml(this.config.roadmapId, groupId)\n      .then((content) => {\n        this.topicOverlay.populate(content);\n      })\n      .catch((e) => {\n        console.error(e);\n        this.topicOverlay.populate('Error loading the content!');\n      });\n  }\n\n  init() {\n    window.addEventListener('click', this.handleCloseTopic);\n    window.addEventListener('click', this.handleLoadTopic);\n  }\n}\n\n/**\n * @param {TopicConfig} config\n */\nwindow.initTopic = function (config) {\n  const topic = new Topic(config);\n  topic.init();\n};\n"],
  "mappings": "MAAO,IAAMA,EAAN,KAAmB,CAIxB,YAAYC,EAAQ,CAClB,KAAK,OAASA,EAEd,KAAK,MAAQ,KAAK,MAAM,KAAK,IAAI,EACjC,KAAK,QAAU,KAAK,QAAQ,KAAK,IAAI,EACrC,KAAK,SAAW,KAAK,SAAS,KAAK,IAAI,CACzC,CAEA,IAAI,UAAW,CACb,OAAO,SAAS,eAAe,KAAK,OAAO,QAAQ,CACrD,CAEA,IAAI,WAAY,CACd,OAAO,SAAS,eAAe,KAAK,OAAO,SAAS,CACtD,CAEA,IAAI,WAAY,CACd,OAAO,SAAS,eAAe,KAAK,OAAO,SAAS,CACtD,CAKA,SAAU,CACR,YAAK,SAAS,UAAU,OAAO,QAAQ,EACvC,KAAK,UAAU,gBAAgB,EAAE,EACjC,KAAK,UAAU,UAAU,OAAO,QAAQ,EAEjC,IACT,CAKA,OAAQ,CACN,YAAK,UAAU,UAAU,IAAI,QAAQ,EACrC,KAAK,SAAS,UAAU,OAAO,QAAQ,EACvC,KAAK,UAAU,gBAAgB,EAAE,EAE1B,IACT,CAMA,SAASC,EAAM,CACb,YAAK,UAAU,gBAAgBA,CAAI,EACnC,KAAK,SAAS,UAAU,IAAI,QAAQ,EAE7B,IACT,CACF,ECnDO,IAAMC,EAAN,KAAY,CAIjB,YAAYC,EAAQ,CAClB,KAAK,OAASA,EAEd,KAAK,aAAe,IAAIC,EAAa,CACnC,UAAW,KAAK,OAAO,eACvB,SAAU,KAAK,OAAO,cACtB,UAAW,KAAK,OAAO,cACzB,CAAC,EAED,KAAK,iBAAmB,KAAK,iBAAiB,KAAK,IAAI,EACvD,KAAK,gBAAkB,KAAK,gBAAgB,KAAK,IAAI,EACrD,KAAK,KAAO,KAAK,KAAK,KAAK,IAAI,CACjC,CAEA,eAAeC,EAAWC,EAAS,CACjC,IAAMC,EAAeD,EAAQ,QAAQ,QAAS,EAAE,EAAE,WAAW,KAAM,GAAG,EAChEE,EAAU,IAAIH,KAAaE,KAEjC,OAAO,MAAMC,CAAO,EACjB,KAAMC,GACEA,EAAI,KAAK,CACjB,EACA,KAAMC,GAGQ,IAAI,UAAU,EAAE,gBAAgBA,EAAW,WAAW,EAEvD,eAAe,cAAc,CAC1C,CACL,CAEA,iBAAiBC,EAAG,CAEdA,EAAE,OAAO,QAAQ,KAAK,OAAO,cAAc,IAI/CA,EAAE,gBAAgB,EAElB,KAAK,aAAa,MAAM,EAC1B,CAEA,gBAAgBA,EAAG,CACjB,IAAMC,EAAcD,EAAE,OAAO,QAAQ,GAAG,GAAK,CAAC,EACxCL,EAAUM,EAAY,QAAUA,EAAY,QAAQ,QAAU,GACpE,GAAI,EAACN,EAML,IAFAK,EAAE,gBAAgB,EAEd,YAAY,KAAKL,CAAO,EAAG,CAC7B,OAAO,KAAK,WAAWA,EAAQ,QAAQ,YAAa,EAAE,GAAG,EACzD,MACF,CAEA,KAAK,aAAa,QAAQ,EAE1B,KAAK,eAAe,KAAK,OAAO,UAAWA,CAAO,EAC/C,KAAMO,GAAY,CACjB,KAAK,aAAa,SAASA,CAAO,CACpC,CAAC,EACA,MAAOF,GAAM,CACZ,QAAQ,MAAMA,CAAC,EACf,KAAK,aAAa,SAAS,4BAA4B,CACzD,CAAC,EACL,CAEA,MAAO,CACL,OAAO,iBAAiB,QAAS,KAAK,gBAAgB,EACtD,OAAO,iBAAiB,QAAS,KAAK,eAAe,CACvD,CACF,EAKA,OAAO,UAAY,SAAUR,EAAQ,CACrB,IAAID,EAAMC,CAAM,EACxB,KAAK,CACb",
  "names": ["TopicOverlay", "config", "html", "Topic", "config", "TopicOverlay", "roadmapId", "groupId", "topicPartial", "fullUrl", "res", "topicHtml", "e", "targetGroup", "content"]
}
